{"version":3,"sources":["stores/AppStore.js","icons/SelectChecked.svg","components/NewIcon/NewIcon.js","components/SelectValuteFrom/styled.js","components/SelectValuteFrom/SelectValuteFrom.js","components/SelectValuteTo/styled.js","components/SelectValuteTo/SelectValuteTo.js","icons/Arrow1.svg","icons/Arrow2.svg","components/ReverseButton/styled.js","components/ReverseButton/ReverseButton.js","App.js","reportWebVitals.js","index.js","components/SelectValuteFrom/style.module.css","components/SelectValuteTo/style.module.css","components/ReverseButton/style.module.css","components/NewIcon/style.module.css"],"names":["store","constructor","Api_data","fetchData","async","response","axios","get","this","data","makeAutoObservable","StoreContext","createContext","iconStyle","position","pointerEvents","NewIcon","className","style","dropDownArrow","width","height","viewBox","fill","d","stroke","useStyles","makeStyles","theme","select","paddingLeft","MenuProps","MenuListProps","padding","PaperProps","maxHeight","maxWidth","borderRadius","marginTop","boxShadow","selectStyle","color","menuItemStyle","minHeight","backgroundColor","checkboxStyle","numberStyle","SelectValuteFrom","props","classes","factor","parseFloat","ValuteList","Valute","SelectFrom","Value","SelectTo","toLocaleString","maximumFractionDigits","upperText","inputChapter","Select","IconComponent","value","renderValue","onChange","e","FuncSelectFrom","target","Object","keys","map","key","MenuItem","keysFont","labelFont","Name","selectCheckboxArrow","Checkbox","checked","icon","checkedIcon","checkedArrowPos","checkboxArrowSize","src","checkedArrow","border","content","inputText","placeholder","InputValuteFrom","thousandSeparator","decimalSeparator","onValueChange","values","formattedValue","FuncInputValuteFrom","FuncFormattedInput","infoFont","menuProps","SelectValuteTo","outputChapter","FuncSelectTo","type","ConvertFunc","FuncResultValue","buttonStyle","ReverseButton","buttonFlex","IconButton","onClick","click","arrowFlexOne","ArrowOne","arrowFlexTwo","ArrowTwo","App","observer","selectValuteFrom","setSelectValuteFrom","useState","selectValuteTo","setSelectValuteTo","valuteFrom","setValuteFrom","valuteTo","setValuteTo","formattedInput","setFormattedInput","useContext","temp","isButtonPressed","useEffect","FormattedInput","ResultValue","result","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9422890c.chunk.js","sourcesContent":["import React, {createContext} from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { makeAutoObservable, observable, makeObservable } from \"mobx\"\r\nimport axios from \"axios\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\n\r\n    export class AppStore {\r\n    Api_data = null;\r\n    constructor () {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n             fetchData = async () => {\r\n            const api_url = \"https://www.cbr-xml-daily.ru/daily_json.js\";\r\n            const response = await axios.get(api_url);\r\n            this.Api_data = response.data; \r\n    }\r\n          \r\n }\r\n export const store = new AppStore();\r\n export const StoreContext = createContext(store);","export default __webpack_public_path__ + \"static/media/SelectChecked.5d713d9a.svg\";","import style from \"./style.module.css\";\r\nconst iconStyle = {\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n};\r\n\r\nexport const NewIcon = () => {\r\n  return (\r\n    <div className={style.dropDownArrow}>\r\n      <svg\r\n        style={iconStyle}\r\n        width=\"14\"\r\n        height=\"7\"\r\n        viewBox=\"0 0 16 9\"\r\n        fill=\"none\"\r\n      >\r\n        <path d=\"M1 1L8 8L15 1\" stroke=\"black\" stroke-width=\"1.27273\" />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  select: {\r\n    width: 400,\r\n    height: 44,\r\n    \"& .MuiInputBase-input\": {\r\n      paddingLeft: 22,\r\n    },\r\n    // \"&:hover .Mui-focused\": {\r\n    //   border: \"1px solid #CDCDCD\",\r\n    //   borderColor: \"red !important\",\r\n    // },\r\n    // \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n    //   border: \"1px solid #CDCDCD\",\r\n    //   borderColor: \"red !important\",\r\n    // },\r\n    // \"& .Mui-disabled\": {\r\n    //   color: \"#FFFFFF\",\r\n    //   opacity: 0.6,\r\n    // },\r\n    // \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n    //   border: \"1px solid #484850\",\r\n    //   borderColor: \"red !important\",\r\n    // },\r\n    // \"&:focus-visible .MuiOutlinedInput-notchedOutline\": {\r\n    //   border: \"1px solid #484850\",\r\n    //   borderColor: \"red !important\",\r\n    // },\r\n    // \"& .MuiInputBase-root\": {\r\n    //   \"& .MuiOutlinedInput-root\": {\r\n    //     \"& .Mui-focused\": {\r\n    //       \"& .MuiOutlinedInput-notchedOutline\": {\r\n    //         borderColor: \"red !important\",\r\n    //       },\r\n    //     },\r\n    //   },\r\n    // },\r\n    // \"&:focus-visible .Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n    //   border: \"1px solid #484850\",\r\n    //   borderColor: \"red !important\",\r\n    //   // },\r\n    // },\r\n    // \"& .MuiInput-underline:after\": {\r\n    //   borderBottomColor: \"yellow\",\r\n    // },\r\n  },\r\n}));\r\n\r\nexport const MenuProps = {\r\n  MenuListProps: { style: { padding: 0 } },\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 140,\r\n      maxWidth: 400,\r\n      borderRadius: \"0px 0px 8px 8px\",\r\n      marginTop: \"-5px\",\r\n      boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.25)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const selectStyle = {\r\n  borderRadius: \"8px 8px 0px 0px\",\r\n  color: \"#71767A\",\r\n};\r\n\r\nexport const menuItemStyle = {\r\n  padding: \"12px 0px 0px 22px\",\r\n  minHeight: 21,\r\n  backgroundColor: \"white\",\r\n};\r\n\r\nexport const checkboxStyle = {\r\n  width: 13,\r\n  height: 24,\r\n  backgroundColor: \"transparent\",\r\n};\r\n\r\nexport const numberStyle = { width: 350 };\r\n","import React from \"react\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport checkedArrow from \"../../icons/SelectChecked.svg\";\r\nimport { NewIcon } from \"../NewIcon/NewIcon\";\r\nimport style from \"./style.module.css\";\r\nimport {\r\n  useStyles,\r\n  MenuProps,\r\n  selectStyle,\r\n  menuItemStyle,\r\n  checkboxStyle,\r\n  numberStyle,\r\n} from \"./styled\";\r\n\r\nexport const SelectValuteFrom = (props) => {\r\n  const classes = useStyles();\r\n  const factor = parseFloat(\r\n    props.ValuteList.Valute[props.SelectFrom].Value /\r\n      props.ValuteList.Valute[props.SelectTo].Value\r\n  ).toLocaleString(\"ru\", { maximumFractionDigits: 4 });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className={style.upperText}>\r\n          У меня есть\r\n          <div className={style.inputChapter}>\r\n            <Select\r\n              style={selectStyle}\r\n              MenuProps={MenuProps}\r\n              IconComponent={NewIcon}\r\n              className={classes.select}\r\n              value={props.SelectFrom}\r\n              renderValue={(value) => value}\r\n              onChange={(e) => {\r\n                props.FuncSelectFrom(e.target.value);\r\n              }}\r\n            >\r\n              {Object.keys(props.ValuteList.Valute).map((key) => (\r\n                <MenuItem style={menuItemStyle} value={key} key={key}>\r\n                  <span className={style.keysFont}> {key} </span>\r\n                  <span className={style.labelFont}>\r\n                    {props.ValuteList.Valute[key].Name}\r\n                  </span>\r\n                  <div className={style.selectCheckboxArrow}>\r\n                    <Checkbox\r\n                      style={checkboxStyle}\r\n                      checked={props.SelectFrom === key}\r\n                      icon={<div />}\r\n                      checkedIcon={\r\n                        <div className={style.checkedArrowPos}>\r\n                          <img\r\n                            className={style.checkboxArrowSize}\r\n                            src={checkedArrow}\r\n                          />\r\n                        </div>\r\n                      }\r\n                    />\r\n                  </div>\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <div className={style.border}>\r\n              <div className={style.content}>\r\n                <NumberFormat\r\n                  style={numberStyle}\r\n                  className={style.inputText}\r\n                  placeholder=\"Input here...\"\r\n                  value={props.InputValuteFrom}\r\n                  thousandSeparator=\" \"\r\n                  decimalSeparator=\",\"\r\n                  onValueChange={(values) => {\r\n                    const { formattedValue, value } = values;\r\n                    props.FuncInputValuteFrom(formattedValue);\r\n                    props.FuncFormattedInput(value);\r\n                  }}\r\n                />\r\n                <div className={style.infoFont}>\r\n                  1 {props.SelectFrom} = {factor} {props.SelectTo}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  select: {\r\n    width: 400,\r\n    height: 44,\r\n    \"& .MuiInputBase-input\": {\r\n      paddingLeft: 22,\r\n    },\r\n    // \"&:hover .Mui-focused\": {\r\n    //   border: \"1px solid #CDCDCD\",\r\n    //   borderColor: \"red !important\",\r\n    // },\r\n    // \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n    //   border: \"1px solid #CDCDCD\",\r\n    //   borderColor: \"red !important\",\r\n    // },\r\n    // \"& .Mui-disabled\": {\r\n    //   color: \"#FFFFFF\",\r\n    //   opacity: 0.6,\r\n    // },\r\n    // \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n    //   border: \"1px solid #484850\",\r\n    //   borderColor: \"red !important\",\r\n    // },\r\n    // \"&:focus-visible .MuiOutlinedInput-notchedOutline\": {\r\n    //   border: \"1px solid #484850\",\r\n    //   borderColor: \"red !important\",\r\n    // },\r\n    // \"& .MuiInputBase-root\": {\r\n    //   \"& .MuiOutlinedInput-root\": {\r\n    //     \"& .Mui-focused\": {\r\n    //       \"& .MuiOutlinedInput-notchedOutline\": {\r\n    //         borderColor: \"red !important\",\r\n    //       },\r\n    //     },\r\n    //   },\r\n    // },\r\n    // \"&:focus-visible .Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n    //   border: \"1px solid #484850\",\r\n    //   borderColor: \"red !important\",\r\n    //   // },\r\n    // },\r\n    // \"& .MuiInput-underline:after\": {\r\n    //   borderBottomColor: \"yellow\",\r\n    // },\r\n  },\r\n}));\r\nexport const menuProps = {\r\n  MenuListProps: { style: { padding: 0 } },\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: 140,\r\n      maxWidth: 400,\r\n      borderRadius: \"0px 0px 8px 8px\",\r\n      marginTop: \"-5px\",\r\n      boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.25)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const selectStyle = {\r\n  borderRadius: \"8px 8px 0px 0px\",\r\n  color: \"#71767A\",\r\n};\r\n\r\nexport const menuItemStyle = {\r\n  padding: \"12px 0px 0px 22px\",\r\n  minHeight: 21,\r\n  backgroundColor: \"white\",\r\n};\r\n\r\nexport const checkboxStyle = {\r\n  width: 13,\r\n  height: 24,\r\n  backgroundColor: \"transparent\",\r\n};\r\n\r\nexport const numberStyle = { width: 350 };\r\n","import React from \"react\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport checkedArrow from \"../../icons/SelectChecked.svg\";\r\nimport style from \"./style.module.css\";\r\nimport { NewIcon } from \"../NewIcon/NewIcon\";\r\nimport {\r\n  useStyles,\r\n  menuProps,\r\n  selectStyle,\r\n  menuItemStyle,\r\n  checkboxStyle,\r\n  numberStyle,\r\n} from \"./styled\";\r\n\r\nexport const SelectValuteTo = (props) => {\r\n  const classes = useStyles();\r\n  const factor = (\r\n    parseFloat(props.ValuteList.Valute[props.SelectTo].Value) /\r\n    props.ValuteList.Valute[props.SelectFrom].Value\r\n  ).toLocaleString(\"ru\", { maximumFractionDigits: 2 });\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className={style.upperText}>\r\n          Я получу\r\n          <div className={style.outputChapter}>\r\n            <Select\r\n              style={selectStyle}\r\n              MenuProps={menuProps}\r\n              className={classes.select}\r\n              IconComponent={NewIcon}\r\n              value={props.SelectTo}\r\n              renderValue={(value) => value}\r\n              onChange={(e) => {\r\n                props.FuncSelectTo(e.target.value);\r\n              }}\r\n            >\r\n              {Object.keys(props.ValuteList.Valute).map((key) => (\r\n                <MenuItem style={menuItemStyle} value={key} key={key}>\r\n                  <span className={style.keysFont}>{key}</span>\r\n                  <span className={style.labelFont}>\r\n                    {props.ValuteList.Valute[key].Name}\r\n                  </span>\r\n                  <div className={style.selectCheckboxArrow}>\r\n                    <Checkbox\r\n                      style={checkboxStyle}\r\n                      checked={props.SelectTo === key}\r\n                      icon={<div />}\r\n                      checkedIcon={\r\n                        <div className={style.checkedArrowPos}>\r\n                          <img\r\n                            className={style.checkboxArrowSize}\r\n                            src={checkedArrow}\r\n                          />\r\n                        </div>\r\n                      }\r\n                    />\r\n                  </div>\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <div className={style.border}>\r\n              <div className={style.content}>\r\n                <input\r\n                  style={numberStyle}\r\n                  className={style.inputText}\r\n                  type=\"text\"\r\n                  value={props.ConvertFunc()}\r\n                  onChange={(e) => {\r\n                    props.FuncResultValue(e.target.value);\r\n                  }}\r\n                />\r\n                <div className={style.infoFont}>\r\n                  1 {props.SelectTo} = {factor} {props.SelectFrom}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Arrow1.a7bbddf8.svg\";","export default __webpack_public_path__ + \"static/media/Arrow2.907e579d.svg\";","export const buttonStyle = {\r\n    padding: 0,\r\n    width: 70,\r\n    height: 70,\r\n    backgroundColor: \"transparent\",\r\n  }","import React from \"react\";\r\nimport style from \"./style.module.css\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport ArrowOne from \"../../icons/Arrow1.svg\";\r\nimport ArrowTwo from \"../../icons/Arrow2.svg\";\r\nimport { buttonStyle } from \"./styled\";\r\n\r\nexport const ReverseButton = (props) => {\r\n  return (\r\n    <div className={style.buttonFlex}>\r\n      <IconButton style={buttonStyle} onClick={props.click}>\r\n        <div className={style.arrowFlexOne}>\r\n          <img src={ArrowOne} />\r\n          <div className={style.arrowFlexTwo}>\r\n            <img src={ArrowTwo} />\r\n          </div>\r\n        </div>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { StoreContext } from \"./stores/AppStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { SelectValuteFrom } from \"./components/SelectValuteFrom/SelectValuteFrom\";\r\nimport { SelectValuteTo } from \"./components/SelectValuteTo/SelectValuteTo\";\r\nimport { ReverseButton } from \"./components/ReverseButton/ReverseButton\";\r\n\r\nconst App = observer(() => {\r\n  const [selectValuteFrom, setSelectValuteFrom] = useState(\"AUD\");\r\n  const [selectValuteTo, setSelectValuteTo] = useState(\"AUD\");\r\n  const [valuteFrom, setValuteFrom] = useState(\"\");\r\n  const [valuteTo, setValuteTo] = useState(\"\");\r\n  const [formattedInput, setFormattedInput] = useState(\"0\");\r\n  const store = useContext(StoreContext);\r\n  const temp = selectValuteFrom;\r\n  let isButtonPressed = false;\r\n\r\n  const convertValute = () => {\r\n    let result = 0;\r\n    if (formattedInput > 0) {\r\n      const factor =\r\n        store.Api_data.Valute[selectValuteFrom].Value /\r\n        store.Api_data.Valute[selectValuteTo].Value;\r\n      result = formattedInput * factor;\r\n    } else {\r\n      result = \"\";\r\n    }\r\n    return result.toLocaleString(\"ru\", { maximumFractionDigits: 2 });\r\n  };\r\n\r\n  const buttonClick = () => {\r\n    isButtonPressed = true;\r\n    if (isButtonPressed) {\r\n      setSelectValuteFrom(selectValuteTo);\r\n      setSelectValuteTo(temp);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    store.fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mainContent\">\r\n      {store.Api_data && (\r\n        <>\r\n          <SelectValuteFrom\r\n            FormattedInput={formattedInput}\r\n            FuncFormattedInput={setFormattedInput}\r\n            ValuteList={store.Api_data}\r\n            SelectFrom={selectValuteFrom}\r\n            FuncSelectFrom={setSelectValuteFrom}\r\n            InputValuteFrom={valuteFrom}\r\n            FuncInputValuteFrom={setValuteFrom}\r\n            SelectTo={selectValuteTo}\r\n          />\r\n\r\n          <ReverseButton click={buttonClick} />\r\n\r\n          <SelectValuteTo\r\n            ValuteList={store.Api_data}\r\n            SelectTo={selectValuteTo}\r\n            SelectFrom={selectValuteFrom}\r\n            FuncSelectTo={setSelectValuteTo}\r\n            ResultValue={valuteTo}\r\n            FuncResultValue={setValuteTo}\r\n            ConvertFunc={convertValute}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"style_border__3Mpsk\",\"inputText\":\"style_inputText__6qT6c\",\"select\":\"style_select__SDM98\",\"keysFont\":\"style_keysFont__G7dli\",\"labelFont\":\"style_labelFont__1eoIA\",\"infoFont\":\"style_infoFont__3wz9P\",\"content\":\"style_content__LG1Eq\",\"inputChapter\":\"style_inputChapter__3TxAv\",\"arrowStyle\":\"style_arrowStyle__2yKLD\",\"rembo\":\"style_rembo__3zESy\",\"upperText\":\"style_upperText__1lsgM\",\"checkedArrowPos\":\"style_checkedArrowPos__263-1\",\"selectCheckboxArrow\":\"style_selectCheckboxArrow__39uvw\",\"checkboxArrowSize\":\"style_checkboxArrowSize__2owPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"style_border__3QCwD\",\"inputText\":\"style_inputText__3e6Vo\",\"select\":\"style_select__gRanZ\",\"keysFont\":\"style_keysFont__2VXKX\",\"labelFont\":\"style_labelFont__iGqB-\",\"infoFont\":\"style_infoFont__2YWS5\",\"content\":\"style_content__1UdV-\",\"outputChapter\":\"style_outputChapter__2KGlO\",\"upperText\":\"style_upperText__UWmpu\",\"selectCheckboxArrow\":\"style_selectCheckboxArrow__Xveam\",\"checkboxArrowSize\":\"style_checkboxArrowSize__c0hoS\",\"checkedArrowPos\":\"style_checkedArrowPos__2p0bk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonImg\":\"style_buttonImg__3cBMh\",\"buttonFlex\":\"style_buttonFlex__B1y5f\",\"arrowFlexOne\":\"style_arrowFlexOne__2Bnkl\",\"arrowFlexTwo\":\"style_arrowFlexTwo__Ph0eR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropDownArrow\":\"style_dropDownArrow__YHXqX\"};"],"sourceRoot":""}