{"version":3,"sources":["stores/AppStore.js","icons/SelectChecked.svg","components/NewIcon/NewIcon.js","components/SelectValuteFrom/styled.js","components/SelectValuteFrom/SelectValuteFrom.js","components/SelectValuteTo/styled.js","components/SelectValuteTo/SelectValuteTo.js","icons/Arrow1.svg","icons/Arrow2.svg","components/ReverseButton/styled.js","components/ReverseButton/ReverseButton.js","App.js","reportWebVitals.js","index.js","components/SelectValuteFrom/style.module.css","components/SelectValuteTo/style.module.css","components/ReverseButton/style.module.css","components/NewIcon/style.module.css"],"names":["store","constructor","Api_data","fetchData","async","response","axios","get","this","data","makeAutoObservable","StoreContext","createContext","iconStyle","position","pointerEvents","NewIcon","className","style","dropDownArrow","width","height","viewBox","fill","d","stroke","useStyles","makeStyles","theme","select","paddingLeft","MenuProps","MenuListProps","padding","PaperProps","maxHeight","maxWidth","borderRadius","marginTop","boxShadow","selectStyle","color","menuItemStyle","minHeight","backgroundColor","checkboxStyle","numberStyle","SelectValuteFrom","props","classes","factor","parseFloat","ValuteList","Valute","SelectFrom","Value","SelectTo","toLocaleString","maximumFractionDigits","upperText","inputChapter","Select","IconComponent","value","renderValue","onChange","e","FuncSelectFrom","target","Object","keys","map","key","MenuItem","keysFont","labelFont","Name","selectCheckboxArrow","Checkbox","checked","icon","checkedIcon","checkedArrowPos","checkboxArrowSize","src","checkedArrow","border","content","inputText","placeholder","InputValuteFrom","thousandSeparator","decimalSeparator","onValueChange","values","formattedValue","FuncInputValuteFrom","FuncFormattedInput","infoFont","menuProps","SelectValuteTo","outputChapter","FuncSelectTo","type","ConvertFunc","FuncResultValue","buttonStyle","ReverseButton","buttonFlex","IconButton","onClick","click","arrowFlexOne","ArrowOne","arrowFlexTwo","ArrowTwo","App","observer","selectValuteFrom","setSelectValuteFrom","useState","selectValuteTo","setSelectValuteTo","valuteFrom","setValuteFrom","valuteTo","setValuteTo","formattedInput","setFormattedInput","useContext","temp","isButtonPressed","useEffect","FormattedInput","ResultValue","result","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f1589e51.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { makeAutoObservable, observable, makeObservable } from \"mobx\";\r\nimport axios from \"axios\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport class AppStore {\r\n    Api_data = null;\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    fetchData = async () => {\r\n        const api_url = \"https://www.cbr-xml-daily.ru/daily_json.js\";\r\n        const response = await axios.get(api_url);\r\n        this.Api_data = response.data;\r\n    };\r\n}\r\nexport const store = new AppStore();\r\nexport const StoreContext = createContext(store);\r\n","export default __webpack_public_path__ + \"static/media/SelectChecked.5d713d9a.svg\";","import style from \"./style.module.css\";\r\n\r\nconst iconStyle = {\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n};\r\n\r\nexport const NewIcon = () => {\r\n    return (\r\n        <div className={style.dropDownArrow}>\r\n            <svg\r\n                style={iconStyle}\r\n                width=\"14\"\r\n                height=\"7\"\r\n                viewBox=\"0 0 16 9\"\r\n                fill=\"none\"\r\n            >\r\n                <path d=\"M1 1L8 8L15 1\" stroke=\"black\" stroke-width=\"1.27273\" />\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        width: 400,\r\n        height: 44,\r\n        \"& .MuiInputBase-input\": {\r\n            paddingLeft: 22,\r\n        },\r\n    },\r\n}));\r\n\r\nexport const MenuProps = {\r\n    MenuListProps: { style: { padding: 0 } },\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: 140,\r\n            maxWidth: 400,\r\n            borderRadius: \"0px 0px 8px 8px\",\r\n            marginTop: \"-5px\",\r\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.25)\",\r\n        },\r\n    },\r\n};\r\n\r\nexport const selectStyle = {\r\n    borderRadius: \"8px 8px 0px 0px\",\r\n    color: \"#71767A\",\r\n};\r\n\r\nexport const menuItemStyle = {\r\n    padding: \"12px 0px 0px 22px\",\r\n    minHeight: 21,\r\n    backgroundColor: \"white\",\r\n};\r\n\r\nexport const checkboxStyle = {\r\n    width: 13,\r\n    height: 24,\r\n    backgroundColor: \"transparent\",\r\n};\r\n\r\nexport const numberStyle = { width: 350 };\r\n","import React from \"react\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport checkedArrow from \"../../icons/SelectChecked.svg\";\r\nimport { NewIcon } from \"../NewIcon/NewIcon\";\r\nimport style from \"./style.module.css\";\r\nimport {\r\n    useStyles,\r\n    MenuProps,\r\n    selectStyle,\r\n    menuItemStyle,\r\n    checkboxStyle,\r\n    numberStyle,\r\n} from \"./styled\";\r\n\r\nexport const SelectValuteFrom = (props) => {\r\n    const classes = useStyles();\r\n    const factor = parseFloat(\r\n        props.ValuteList.Valute[props.SelectFrom].Value /\r\n            props.ValuteList.Valute[props.SelectTo].Value\r\n    ).toLocaleString(\"ru\", { maximumFractionDigits: 4 });\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className={style.upperText}>\r\n                    У меня есть\r\n                    <div className={style.inputChapter}>\r\n                        <Select\r\n                            style={selectStyle}\r\n                            MenuProps={MenuProps}\r\n                            IconComponent={NewIcon}\r\n                            className={classes.select}\r\n                            value={props.SelectFrom}\r\n                            renderValue={(value) => value}\r\n                            onChange={(e) => {\r\n                                props.FuncSelectFrom(e.target.value);\r\n                            }}\r\n                        >\r\n                            {Object.keys(props.ValuteList.Valute).map((key) => (\r\n                                <MenuItem\r\n                                    style={menuItemStyle}\r\n                                    value={key}\r\n                                    key={key}\r\n                                >\r\n                                    <span className={style.keysFont}>\r\n                                        {\" \"}\r\n                                        {key}{\" \"}\r\n                                    </span>\r\n                                    <span className={style.labelFont}>\r\n                                        {props.ValuteList.Valute[key].Name}\r\n                                    </span>\r\n                                    <div className={style.selectCheckboxArrow}>\r\n                                        <Checkbox\r\n                                            style={checkboxStyle}\r\n                                            checked={props.SelectFrom === key}\r\n                                            icon={<div />}\r\n                                            checkedIcon={\r\n                                                <div\r\n                                                    className={\r\n                                                        style.checkedArrowPos\r\n                                                    }\r\n                                                >\r\n                                                    <img\r\n                                                        className={\r\n                                                            style.checkboxArrowSize\r\n                                                        }\r\n                                                        src={checkedArrow}\r\n                                                    />\r\n                                                </div>\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        <div className={style.border}>\r\n                            <div className={style.content}>\r\n                                <NumberFormat\r\n                                    style={numberStyle}\r\n                                    className={style.inputText}\r\n                                    placeholder=\"Input here...\"\r\n                                    value={props.InputValuteFrom}\r\n                                    thousandSeparator=\" \"\r\n                                    decimalSeparator=\",\"\r\n                                    onValueChange={(values) => {\r\n                                        const { formattedValue, value } =\r\n                                            values;\r\n                                        props.FuncInputValuteFrom(\r\n                                            formattedValue\r\n                                        );\r\n                                        props.FuncFormattedInput(value);\r\n                                    }}\r\n                                />\r\n                                <div className={style.infoFont}>\r\n                                    1 {props.SelectFrom} = {factor}{\" \"}\r\n                                    {props.SelectTo}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        width: 400,\r\n        height: 44,\r\n        \"& .MuiInputBase-input\": {\r\n            paddingLeft: 22,\r\n        },\r\n    },\r\n}));\r\n\r\nexport const menuProps = {\r\n    MenuListProps: { style: { padding: 0 } },\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: 140,\r\n            maxWidth: 400,\r\n            borderRadius: \"0px 0px 8px 8px\",\r\n            marginTop: \"-5px\",\r\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.25)\",\r\n        },\r\n    },\r\n};\r\n\r\nexport const selectStyle = {\r\n    borderRadius: \"8px 8px 0px 0px\",\r\n    color: \"#71767A\",\r\n};\r\n\r\nexport const menuItemStyle = {\r\n    padding: \"12px 0px 0px 22px\",\r\n    minHeight: 21,\r\n    backgroundColor: \"white\",\r\n};\r\n\r\nexport const checkboxStyle = {\r\n    width: 13,\r\n    height: 24,\r\n    backgroundColor: \"transparent\",\r\n};\r\n\r\nexport const numberStyle = { width: 350 };\r\n","import React from \"react\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport checkedArrow from \"../../icons/SelectChecked.svg\";\r\nimport style from \"./style.module.css\";\r\nimport { NewIcon } from \"../NewIcon/NewIcon\";\r\nimport {\r\n    useStyles,\r\n    menuProps,\r\n    selectStyle,\r\n    menuItemStyle,\r\n    checkboxStyle,\r\n    numberStyle,\r\n} from \"./styled\";\r\n\r\nexport const SelectValuteTo = (props) => {\r\n    const classes = useStyles();\r\n    const factor = (\r\n        parseFloat(props.ValuteList.Valute[props.SelectTo].Value) /\r\n        props.ValuteList.Valute[props.SelectFrom].Value\r\n    ).toLocaleString(\"ru\", { maximumFractionDigits: 2 });\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className={style.upperText}>\r\n                    Я получу\r\n                    <div className={style.outputChapter}>\r\n                        <Select\r\n                            style={selectStyle}\r\n                            MenuProps={menuProps}\r\n                            className={classes.select}\r\n                            IconComponent={NewIcon}\r\n                            value={props.SelectTo}\r\n                            renderValue={(value) => value}\r\n                            onChange={(e) => {\r\n                                props.FuncSelectTo(e.target.value);\r\n                            }}\r\n                        >\r\n                            {Object.keys(props.ValuteList.Valute).map((key) => (\r\n                                <MenuItem\r\n                                    style={menuItemStyle}\r\n                                    value={key}\r\n                                    key={key}\r\n                                >\r\n                                    <span className={style.keysFont}>\r\n                                        {key}\r\n                                    </span>\r\n                                    <span className={style.labelFont}>\r\n                                        {props.ValuteList.Valute[key].Name}\r\n                                    </span>\r\n                                    <div className={style.selectCheckboxArrow}>\r\n                                        <Checkbox\r\n                                            style={checkboxStyle}\r\n                                            checked={props.SelectTo === key}\r\n                                            icon={<div />}\r\n                                            checkedIcon={\r\n                                                <div\r\n                                                    className={\r\n                                                        style.checkedArrowPos\r\n                                                    }\r\n                                                >\r\n                                                    <img\r\n                                                        className={\r\n                                                            style.checkboxArrowSize\r\n                                                        }\r\n                                                        src={checkedArrow}\r\n                                                    />\r\n                                                </div>\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        <div className={style.border}>\r\n                            <div className={style.content}>\r\n                                <input\r\n                                    style={numberStyle}\r\n                                    className={style.inputText}\r\n                                    type=\"text\"\r\n                                    value={props.ConvertFunc()}\r\n                                    onChange={(e) => {\r\n                                        props.FuncResultValue(e.target.value);\r\n                                    }}\r\n                                />\r\n                                <div className={style.infoFont}>\r\n                                    1 {props.SelectTo} = {factor}{\" \"}\r\n                                    {props.SelectFrom}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Arrow1.a7bbddf8.svg\";","export default __webpack_public_path__ + \"static/media/Arrow2.907e579d.svg\";","export const buttonStyle = {\r\n    padding: 0,\r\n    width: 70,\r\n    height: 70,\r\n    backgroundColor: \"transparent\",\r\n};\r\n","import React from \"react\";\r\nimport style from \"./style.module.css\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport ArrowOne from \"../../icons/Arrow1.svg\";\r\nimport ArrowTwo from \"../../icons/Arrow2.svg\";\r\nimport { buttonStyle } from \"./styled\";\r\n\r\nexport const ReverseButton = (props) => {\r\n    return (\r\n        <div className={style.buttonFlex}>\r\n            <IconButton style={buttonStyle} onClick={props.click}>\r\n                <div className={style.arrowFlexOne}>\r\n                    <img src={ArrowOne} />\r\n                    <div className={style.arrowFlexTwo}>\r\n                        <img src={ArrowTwo} />\r\n                    </div>\r\n                </div>\r\n            </IconButton>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { StoreContext } from \"./stores/AppStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { SelectValuteFrom } from \"./components/SelectValuteFrom/SelectValuteFrom\";\r\nimport { SelectValuteTo } from \"./components/SelectValuteTo/SelectValuteTo\";\r\nimport { ReverseButton } from \"./components/ReverseButton/ReverseButton\";\r\nimport \"./App.css\";\r\n\r\nconst App = observer(() => {\r\n    const [selectValuteFrom, setSelectValuteFrom] = useState(\"AUD\");\r\n    const [selectValuteTo, setSelectValuteTo] = useState(\"AUD\");\r\n    const [valuteFrom, setValuteFrom] = useState(\"\");\r\n    const [valuteTo, setValuteTo] = useState(\"\");\r\n    const [formattedInput, setFormattedInput] = useState(\"0\");\r\n    const store = useContext(StoreContext);\r\n    const temp = selectValuteFrom;\r\n    let isButtonPressed = false;\r\n\r\n    const convertValute = () => {\r\n        let result = 0;\r\n        if (formattedInput > 0) {\r\n            const factor =\r\n                store.Api_data.Valute[selectValuteFrom].Value /\r\n                store.Api_data.Valute[selectValuteTo].Value;\r\n            result = formattedInput * factor;\r\n        } else {\r\n            result = \"\";\r\n        }\r\n        return result.toLocaleString(\"ru\", { maximumFractionDigits: 2 });\r\n    };\r\n\r\n    const buttonClick = () => {\r\n        isButtonPressed = true;\r\n        if (isButtonPressed) {\r\n            setSelectValuteFrom(selectValuteTo);\r\n            setSelectValuteTo(temp);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        store.fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"mainContent\">\r\n            {store.Api_data && (\r\n                <>\r\n                    <SelectValuteFrom\r\n                        FormattedInput={formattedInput}\r\n                        FuncFormattedInput={setFormattedInput}\r\n                        ValuteList={store.Api_data}\r\n                        SelectFrom={selectValuteFrom}\r\n                        FuncSelectFrom={setSelectValuteFrom}\r\n                        InputValuteFrom={valuteFrom}\r\n                        FuncInputValuteFrom={setValuteFrom}\r\n                        SelectTo={selectValuteTo}\r\n                    />\r\n\r\n                    <ReverseButton click={buttonClick} />\r\n\r\n                    <SelectValuteTo\r\n                        ValuteList={store.Api_data}\r\n                        SelectTo={selectValuteTo}\r\n                        SelectFrom={selectValuteFrom}\r\n                        FuncSelectTo={setSelectValuteTo}\r\n                        ResultValue={valuteTo}\r\n                        FuncResultValue={setValuteTo}\r\n                        ConvertFunc={convertValute}\r\n                    />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"style_border__3Mpsk\",\"inputText\":\"style_inputText__6qT6c\",\"select\":\"style_select__SDM98\",\"keysFont\":\"style_keysFont__G7dli\",\"labelFont\":\"style_labelFont__1eoIA\",\"infoFont\":\"style_infoFont__3wz9P\",\"content\":\"style_content__LG1Eq\",\"inputChapter\":\"style_inputChapter__3TxAv\",\"arrowStyle\":\"style_arrowStyle__2yKLD\",\"rembo\":\"style_rembo__3zESy\",\"upperText\":\"style_upperText__1lsgM\",\"checkedArrowPos\":\"style_checkedArrowPos__263-1\",\"selectCheckboxArrow\":\"style_selectCheckboxArrow__39uvw\",\"checkboxArrowSize\":\"style_checkboxArrowSize__2owPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"style_border__3QCwD\",\"inputText\":\"style_inputText__3e6Vo\",\"select\":\"style_select__gRanZ\",\"keysFont\":\"style_keysFont__2VXKX\",\"labelFont\":\"style_labelFont__iGqB-\",\"infoFont\":\"style_infoFont__2YWS5\",\"content\":\"style_content__1UdV-\",\"outputChapter\":\"style_outputChapter__2KGlO\",\"upperText\":\"style_upperText__UWmpu\",\"selectCheckboxArrow\":\"style_selectCheckboxArrow__Xveam\",\"checkboxArrowSize\":\"style_checkboxArrowSize__c0hoS\",\"checkedArrowPos\":\"style_checkedArrowPos__2p0bk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonImg\":\"style_buttonImg__3cBMh\",\"buttonFlex\":\"style_buttonFlex__B1y5f\",\"arrowFlexOne\":\"style_arrowFlexOne__2Bnkl\",\"arrowFlexTwo\":\"style_arrowFlexTwo__Ph0eR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropDownArrow\":\"style_dropDownArrow__YHXqX\"};"],"sourceRoot":""}